import asyncio

from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from santa_bot.bot.keyboards import clients_start_kb, create_inline_kb, start_info_kb
from santa_bot.bot.LEXICON import *

router = Router()


@router.message(CommandStart())
async def start_command(message: Message):
    text_message = "–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç-–ø–æ–≤–µ–ª–∏—Ç–µ–ª—å –¢–∞–π–Ω—ã—Ö –°–∞–Ω—Ç. –ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ –Ω–∞ —Å–≤–µ—Ç–µ —è –ª—é–±–ª—é –¥—Ä—É–∑–µ–π –∏ –ø–æ–¥–∞—Ä–∫–∏ üéÅ"
    await message.answer(text=text_message, reply_markup=create_inline_kb())


@router.message(Command('restart'))
async def start_command(message: Message):
    text_message = "–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç-–ø–æ–≤–µ–ª–∏—Ç–µ–ª—å –¢–∞–π–Ω—ã—Ö –°–∞–Ω—Ç. –ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ –Ω–∞ —Å–≤–µ—Ç–µ —è –ª—é–±–ª—é –¥—Ä—É–∑–µ–π –∏ –ø–æ–¥–∞—Ä–∫–∏ üéÅ"
    await message.answer(text=text_message, reply_markup=create_inline_kb())

@router.callback_query(F.data == LEXICON['ready'])
async def get_ready(callback: CallbackQuery):
    text_message = "–° –º–æ–µ–π –ø–æ–º–æ—â—å—é —Ç—ã –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É –∏ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –¢–∞–π–Ω–æ–≥–æ –°–∞–Ω—Ç—É —Å –¥—Ä—É–∑—å—è–º–∏ –∏–ª–∏ —Å–µ–º—å–µ–π " \
                   "üë®‚Äçüë©‚Äçüëß‚Äçüë¶, –Ω–∞ —Ä–∞–±–æ—Ç–µ üë©‚Äç‚úàÔ∏è–∏–ª–∏ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ üßò, –≤–µ–∑–¥–µ, –≥–¥–µ –µ—Å—Ç—å –¥–æ—Ä–æ–≥–∏–µ —Ç–µ–±–µ –ª—é–¥–∏, " \
                   "—Å –∫–µ–º —Ç—ã —Ö–æ—á–µ—à—å —Ä–∞–∑–¥–µ–ª–∏—Ç—å —Ä–∞–¥–æ—Å—Ç—å –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–π —Å—É–µ—Ç—ã.\n\n–í–æ–∑–≥–ª–∞–≤—å –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–µ –±–µ–∑—É–º–∏–µ –∏ —Å—Ç–∞–Ω—å –¥—É—à–æ–π " \
                   "—ç—Ç–æ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞ ‚ú®"
    await callback.message.answer(text=text_message, reply_markup=start_info_kb())
    await callback.answer()


@router.callback_query(F.data == LEXICON['start_info'])
async def get_ready(callback: CallbackQuery):
    text_message = "–ü–æ–∫–∞ –≤—Å–µ –±—É–¥—É—Ç —Å–æ–±–∏—Ä–∞—Ç—å—Å—è –≤ —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø–µ –∏ –¥—É–º–∞—Ç—å, —á—Ç–æ –æ–Ω–∏ —Ö–æ—Ç—è—Ç –ø–æ–ª—É—á–∏—Ç—å –æ—Ç —Å–≤–æ–µ–≥–æ –°–∞–Ω—Ç—ã, " \
                   "—É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–º–æ–≥—É—Ç –ø–æ–∏–≥—Ä–∞—Ç—å –≤ —Å–Ω–µ–∂–∫–∏ ‚òÑÔ∏è (–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —ç—Ç–æ–≥–æ –±—É–¥–µ—Ç –≤ –º–µ–Ω—é [–ú–æ–∏ –≥—Ä—É–ø–ø—ã]) " \
                   "–∏ –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å—Å—è –º–æ–∏–º —à—É—Ç–∫–∞–º.\n\n–ö–æ–≥–¥–∞ –≤—Å–µ —Å–æ–±–µ—Ä—É—Ç—Å—è, —Ç—ã —Å–º–æ–∂–µ—à—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–æ–≤ –∏ " \
                   "—è –ø–æ–¥–±–µ—Ä—É –∏ —Ä–∞–∑–æ—à–ª—é –∫–∞–∂–¥–æ–º—É –µ–≥–æ –ø–æ–¥–æ–ø–µ—á–Ω–æ–≥–æ ü•∑\n\n–°–∞–Ω—Ç–∞ –∏ –ø–æ–¥–æ–ø–µ—á–Ω—ã–π –¥–∞–∂–µ —Å–º–æ–≥—É—Ç –∞–Ω–æ–Ω–∏–º–Ω–æ " \
                   "–ø–æ–æ–±—â–∞—Ç—å—Å—è, –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞—Ö–æ—Ç—è—Ç —É—Ç–æ—á–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∏–ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∏–≤–µ—Ç –¥—Ä—É–≥ –¥—Ä—É–≥—É."
    await callback.message.answer(text=text_message, reply_markup=clients_start_kb)
    await callback.answer()